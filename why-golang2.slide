Golang at THE Football App
A short intro of why and how we use it
14 Mar 2014

Dirk Pahl
Software Architect, motain GmbH

dirk.pahl@motain.de
http://github.com/dirkaholic
@dirkaholic

* Who am I?

My name is Dirk.

I professionally produce code out of coffee since 2001.

I work as Software Architect in the backend team of motain GmbH.

* THE Football App

.image why-golang/tfa.png 80 306
.image why-golang/tfa_large.jpg 370 800

* THE Football App

- founded in 2008
- 45 employees (and growing)
- #1 football app with more than 13 million downloads
- various platforms Android, iOS, Windows Phone, Asha, Samsung Smart TVs
- covering 100+ leagues in 9 different languages (more to come)
- features: live ticker, push notifications, statistics, news, videos, fan zone, match prediction

* Current challenges

- deliver 150+ feeds in 9 languages each (more than 1000 feeds in total)
- 100+ incoming feeds to be processed as fast as possible
- more languages & competitions coming up

* Old stack

.image why-golang/Old-Guy-Smoking-Cigar.jpg 512 384

* Old stack

- plain PHP
- Symfony2
- cron jobs
- dedicated servers
- sequential incoming feed processing

* Go programming language

.image why-golang/mini-gopher.png 550 550

* Go programming language

_Go_is_an_open_source_programming_language_that_makes_it_easy_to_build_simple,_reliable,_and_efficient_software._

That is entirely *true*.

Go enables us to achieve much better results in less time with less resources needed.

Code quality increased and time needed to test code decreased by an order of magnitude.

It runs *fast*, *very*very*FAST*.

* Go programming language - The WHY

It runs almost as fast as C++

It's statically typed but feels like a dynamic one

Compiles in a couple of seconds

100+ tests hitting database run all in under 5 seconds

Costs less than other languages - both for infrastructure and maintenance

It's cool

* Go Programming language - The HOW

Active deployments:

- *seraph* -> _client_like_ monitoring tool

- *logalyzer* -> CloudFront log parser

- *FTP*receiver* -> convert incoming FTP files to RabbitMQ messages

- *EROS* -> high performance call cache

- various other internal apps

In progress:

- upcoming version of our scores backend

* Packages we use

- gorilla / mux
- martini
- gorp
- gocheck

* seraph

- check our produced feeds in real time
- find corrupted / missing data
- do some logical checks
- send alerts to various channels

* logalyzer

- parse the tons of Cloudfront logs we produce every day
- evaluate our logs statistically
- informs us about some unusual usage patterns
- replaces a log analyzing system that would cost us several thousands of dollars per month

* FTP Receiver

- reads files coming in via FTP server using inotify
- publishes a message containing the file contents in AMQP
- replaces a bunch of cron jobs that started PHP scripts

* EROS

- Entity Repository On Steroids
- internal service in our service oriented architecture
- caches a minimum representation of objects from other services
- keeps services independent from each other
- uses groupcache and martini

* Upcoming version of our scores backend

.image why-golang/super-gopher.png 512 384

* Upcoming version of our scores backend

- replaces parts of our plain PHP application one after the other
- reads incoming feeds from AMQP
- parses the feeds and persists the data to our database
- uses gorp
- later it's planned to serve the data to our apps
- runs on AWS

* Deployment

- we develop locally in virtual machines
- compile binaries after running tests in Jenkins on every commit
- binaries are uploaded to S3 after compiling successfully
- we use Chef/OpsWorks recipes for deploying all our apps
- during deployment the latest binary is fetched from S3
- all the configuration files needed are added via the deploy recipe

* Credits

- The Go Gopher logo [[http://golang.org/doc/faq#Whats_the_origin_of_the_mascot][golang.org / Whats the origin of the mascot]]
- The old guy [[http://quittea.com/wp-content/uploads/2012/06/Old-Guy-Smoking-Cigar.jpg][quittea.com]]

* Links

THE Football App

.link http://www.thefootballapp.com

Go programming language

.link http://golang.org

* We are hiring

- DevOps Engineer
- Backend Software Developer
- Frontend Developer
- Android Senior Developer

For more details visit our page:

.link http://www.thefootballapp.com/jobs
